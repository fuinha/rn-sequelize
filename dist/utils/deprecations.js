'use strict';

const {
  deprecate
} = require('util');

const noop = () => {};

exports.noRawAttributes = deprecate(noop, 'Use sequelize.fn / sequelize.literal to construct attributes', 'SEQUELIZE0001');
exports.noTrueLogging = deprecate(noop, 'The logging-option should be either a function or false. Default: console.log', 'SEQUELIZE0002');
exports.noStringOperators = deprecate(noop, 'String based operators are deprecated. Please use Symbol based operators for better security, read more at https://sequelize.org/master/manual/querying.html#operators', 'SEQUELIZE0003');
exports.noBoolOperatorAliases = deprecate(noop, 'A boolean value was passed to options.operatorsAliases. This is a no-op with v5 and should be removed.', 'SEQUELIZE0004');
exports.noDoubleNestedGroup = deprecate(noop, 'Passing a double nested nested array to `group` is unsupported and will be removed in v6.', 'SEQUELIZE0005');
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi91dGlscy9kZXByZWNhdGlvbnMuanMiXSwibmFtZXMiOlsiZGVwcmVjYXRlIiwicmVxdWlyZSIsIm5vb3AiLCJleHBvcnRzIiwibm9SYXdBdHRyaWJ1dGVzIiwibm9UcnVlTG9nZ2luZyIsIm5vU3RyaW5nT3BlcmF0b3JzIiwibm9Cb29sT3BlcmF0b3JBbGlhc2VzIiwibm9Eb3VibGVOZXN0ZWRHcm91cCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQWdCQyxPQUFPLENBQUMsTUFBRCxDQUE3Qjs7QUFFQSxNQUFNQyxJQUFJLEdBQUcsTUFBTSxDQUFFLENBQXJCOztBQUVBQyxPQUFPLENBQUNDLGVBQVIsR0FBMEJKLFNBQVMsQ0FBQ0UsSUFBRCxFQUFPLDhEQUFQLEVBQXVFLGVBQXZFLENBQW5DO0FBQ0FDLE9BQU8sQ0FBQ0UsYUFBUixHQUF3QkwsU0FBUyxDQUFDRSxJQUFELEVBQU8sK0VBQVAsRUFBd0YsZUFBeEYsQ0FBakM7QUFDQUMsT0FBTyxDQUFDRyxpQkFBUixHQUE0Qk4sU0FBUyxDQUFDRSxJQUFELEVBQU8sd0tBQVAsRUFBaUwsZUFBakwsQ0FBckM7QUFDQUMsT0FBTyxDQUFDSSxxQkFBUixHQUFnQ1AsU0FBUyxDQUFDRSxJQUFELEVBQU8sd0dBQVAsRUFBaUgsZUFBakgsQ0FBekM7QUFDQUMsT0FBTyxDQUFDSyxtQkFBUixHQUE4QlIsU0FBUyxDQUFDRSxJQUFELEVBQU8sMkZBQVAsRUFBb0csZUFBcEcsQ0FBdkMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCB7IGRlcHJlY2F0ZSB9ID0gcmVxdWlyZSgndXRpbCcpO1xyXG5cclxuY29uc3Qgbm9vcCA9ICgpID0+IHt9O1xyXG5cclxuZXhwb3J0cy5ub1Jhd0F0dHJpYnV0ZXMgPSBkZXByZWNhdGUobm9vcCwgJ1VzZSBzZXF1ZWxpemUuZm4gLyBzZXF1ZWxpemUubGl0ZXJhbCB0byBjb25zdHJ1Y3QgYXR0cmlidXRlcycsICdTRVFVRUxJWkUwMDAxJyk7XHJcbmV4cG9ydHMubm9UcnVlTG9nZ2luZyA9IGRlcHJlY2F0ZShub29wLCAnVGhlIGxvZ2dpbmctb3B0aW9uIHNob3VsZCBiZSBlaXRoZXIgYSBmdW5jdGlvbiBvciBmYWxzZS4gRGVmYXVsdDogY29uc29sZS5sb2cnLCAnU0VRVUVMSVpFMDAwMicpO1xyXG5leHBvcnRzLm5vU3RyaW5nT3BlcmF0b3JzID0gZGVwcmVjYXRlKG5vb3AsICdTdHJpbmcgYmFzZWQgb3BlcmF0b3JzIGFyZSBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIFN5bWJvbCBiYXNlZCBvcGVyYXRvcnMgZm9yIGJldHRlciBzZWN1cml0eSwgcmVhZCBtb3JlIGF0IGh0dHBzOi8vc2VxdWVsaXplLm9yZy9tYXN0ZXIvbWFudWFsL3F1ZXJ5aW5nLmh0bWwjb3BlcmF0b3JzJywgJ1NFUVVFTElaRTAwMDMnKTtcclxuZXhwb3J0cy5ub0Jvb2xPcGVyYXRvckFsaWFzZXMgPSBkZXByZWNhdGUobm9vcCwgJ0EgYm9vbGVhbiB2YWx1ZSB3YXMgcGFzc2VkIHRvIG9wdGlvbnMub3BlcmF0b3JzQWxpYXNlcy4gVGhpcyBpcyBhIG5vLW9wIHdpdGggdjUgYW5kIHNob3VsZCBiZSByZW1vdmVkLicsICdTRVFVRUxJWkUwMDA0Jyk7XHJcbmV4cG9ydHMubm9Eb3VibGVOZXN0ZWRHcm91cCA9IGRlcHJlY2F0ZShub29wLCAnUGFzc2luZyBhIGRvdWJsZSBuZXN0ZWQgbmVzdGVkIGFycmF5IHRvIGBncm91cGAgaXMgdW5zdXBwb3J0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB2Ni4nLCAnU0VRVUVMSVpFMDAwNScpO1xyXG4iXX0=